name: Buf Generate

on:
  workflow_dispatch:

env:
  IMAGE_PATH: anhtuan9702/buf-tools
  IMAGE_TAG: 1.0.0
  GO_GRPC_REPOSITORY: github.com/jodworkspace/grpc-go
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # prepare_bufbuild:
  #   name: Prepare Buf Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and Push Docker Image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: Dockerfile
  #         push: true
  #         tags: ${{ env.IMAGE_PATH }}:${{ env.IMAGE_TAG }}

  generate_go:
    name: Generate Go Protobufs
    runs-on: ubuntu-latest
    #needs: [prepare_bufbuild]
    container:
      image: ${{ env.IMAGE_PATH }}:${{ env.IMAGE_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update and Generate Buf
        run: |
          buf dep update
          buf generate

      - name: Clone gRPC-Go Repository
        run: |
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com@${{ env.GO_GRPC_REPOSITORY }}.git grpc-go
          cd grpc-go
          BRANCH="${GITHUB_REF##*/}"
          git switch "$BRANCH" || git switch -c "$BRANCH"
          find . -mindepth 1 ! -regex '^./\.git\(/.*\)?' -exec rm -rf {} +
          go mod init gitlab.com/jodworkspace/protobuf/grpc-go
          cp -rf ../go-pb/* .
          go mod tidy
          git config --local user.name "GitHub-Actions"
          git config --local user.email "actions@github.auto"
          git add .
          git commit --allow-empty -m "Update generated codes - ${GITHUB_SHA::7}"
          git fetch --all
          git push -f origin "$BRANCH"

  generate_python:
    name: Generate Python Protobufs
    runs-on: ubuntu-latest
    #needs: [prepare_bufbuild]
    container:
      image: ${{ env.IMAGE_PATH }}:${{ env.IMAGE_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: TODO Placeholder
        run: echo "TODO"

  clean_remove_dev_branch:
    name: Clean Dev Branch
    runs-on: ubuntu-latest
    if: github.ref_name == github.event.repository.default_branch
    steps:
      - name: Clone gRPC-Go Repository
        run: |
          git clone https://${{ secrets.CI_DEPLOY_USER }}:${{ secrets.DEPLOY_TOKEN }}@${{ env.GO_GRPC_REPOSITORY }}.git grpc-go
          cd grpc-go
          DEV_BRANCH=$(echo "${{ github.event.head_commit.message }}" | grep -oP "Merge branch '\\K[^']+")
          echo "Branch to delete: ${DEV_BRANCH}"
          if [ -z "${DEV_BRANCH}" ]; then
            echo "Source branch not found in the commit message."
          else
            git config --local user.name "GitHub-Actions"
            git config --local user.email "actions@github.auto"
            git push origin --delete "${DEV_BRANCH}"
          fi
